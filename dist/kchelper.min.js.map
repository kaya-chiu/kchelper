{"version":3,"file":"kchelper.min.js","sources":["../src/utils.js","../src/getFieldElement.js","../src/getSpaceElement.js","../src/getDateString.js","../src/hideField.js","../src/getAndSetRecord.js","../src/main.js"],"sourcesContent":["const isMobile = event => {\n  try {\n    const type = event?.type || null\n    if (!event || !type) {\n      console.warn('kchelper isMobile: Failed to get kintone event type. Return default value (false).')\n      return false\n    }\n\n    const isMobile = type.slice(0, 6) === 'mobile'\n    return isMobile\n  } catch (err) {\n    console.error(`kchelper isMobile: ${err}`)\n  }\n}\n\nmodule.exports = {\n  isMobile\n}","const getFieldElement = (fieldCode, isMobile) => {\n  try {\n    if (isMobile === true) {\n      return kintone.mobile.app.record.getFieldElement(fieldCode)\n    } else {\n      return kintone.app.record.getFieldElement(fieldCode)\n    }\n  } catch (err) {\n    console.error(`kchelper getFieldElement: ${err}`)\n  }\n}\n\nconst getFieldElements = (fieldCode, isMobile) => {\n  try {\n    if (isMobile === true) {\n      return kintone.mobile.app.getFieldElements(fieldCode)\n    } else {\n      return kintone.app.getFieldElements(fieldCode)\n    }\n  } catch (err) {\n    console.error(`kchelper getFieldElements: ${err}`)\n  }\n}\n\nmodule.exports = {\n  getFieldElement,\n  getFieldElements\n}","const getSpaceElement = (spaceId, isMobile) => {\n  try {\n    if (isMobile === true) {\n      return kintone.mobile.app.record.getSpaceElement(spaceId)\n    } else {\n      return kintone.app.record.getSpaceElement(spaceId)\n    }\n  } catch (err) {\n    console.error(`kchelper getSpaceElement: ${err}`)\n  }\n}\n\nmodule.exports = getSpaceElement","const getDateString = (format, inputDate = new Date()) => {\n  try {\n    const year = inputDate.getFullYear().toString()\n    const month = (inputDate.getMonth() + 1).toString().padStart(2, '0')\n    const date = inputDate.getDate().toString().padStart(2, '0')\n  \n    let dateString\n    switch (format) {\n    case 'yyyymmdd':\n      dateString = `${year}${month}${date}`\n      break\n    case 'yymmdd':\n      dateString = `${year.slice(2, 4)}${month}${date}`\n      break\n    case 'yyyy-mm-dd':\n      dateString = `${year}-${month}-${date}`\n      break\n    case 'yyyymm':\n      dateString = `${year}${month}`\n      break\n    case 'yymm':\n      dateString = `${year.slice(2, 4)}${month}`\n      break\n    default:\n      dateString = `${year}${month}${date}`\n      break\n    }\n\n    return dateString\n  } catch (error) {\n    console.error(`kchelper getDateString: ${err}`)\n  }\n}\n\nmodule.exports = getDateString","const hideField = (fieldCode, isMobile) => {\n  try {\n    if (isMobile === true) {\n      return kintone.mobile.app.record.setFieldShown(fieldCode, false)\n    } else {\n      return kintone.app.record.setFieldShown(fieldCode, false)\n    }\n  } catch (err) {\n    console.error(`kchelper hideField: ${err}`)\n  }\n}\n\nmodule.exports = hideField","const getRecord = (isMobile) => {\n  try {\n    if (isMobile === true) {\n      return kintone.mobile.app.record.get().record\n    } else {\n      return kintone.app.record.get().record\n    }\n  } catch (err) {\n    console.error(`kchelper getRecord: ${err}`)\n  }\n}\n\nconst setRecord = (record, isMobile) => {\n  try {\n    if (isMobile === true) {\n      return kintone.mobile.app.record.set({ record })\n    } else {\n      return kintone.app.record.set({ record })\n    }\n  } catch (err) {\n    console.error(`kchelper setRecord: ${err}`)\n  }\n}\n\nmodule.exports = { getRecord, setRecord }","const { isMobile } = require('./utils')\nconst { getFieldElement, getFieldElements } = require('./getFieldElement')\nconst getSpaceElement = require('./getSpaceElement')\nconst getDateString = require('./getDateString')\nconst hideField = require('./hideField')\nconst { getRecord, setRecord } = require('./getAndSetRecord')\n\nconst kchelper = {\n  isMobile,\n  getFieldElement, getFieldElements,\n  getSpaceElement,\n  getDateString,\n  hideField,\n  getRecord, setRecord\n}\n\nmodule.exports = kchelper"],"names":["utils","isMobile","event","type","console","warn","slice","err","error","getFieldElement_1","getFieldElement","fieldCode","kintone","mobile","app","record","getFieldElements","getSpaceElement_1","spaceId","getSpaceElement","getDateString_1","format","inputDate","Date","year","getFullYear","toString","month","getMonth","padStart","date","getDate","dateString","hideField_1","setFieldShown","getAndSetRecord","getRecord","get","set","require$$0","require$$1","setRecord","require$$2","main","getDateString","hideField"],"mappings":"aAeA,IAAAA,EAAiB,CACjBC,SAhBiBC,IACf,IACE,MAAMC,EAAOD,GAAOC,MAAQ,KAC5B,IAAKD,IAAUC,EAEb,OADAC,QAAQC,KAAK,uFACN,EAIT,MADsC,WAArBF,EAAKG,MAAM,EAAG,EAEhC,CAAC,MAAOC,GACPH,QAAQI,MAAM,sBAAsBD,IACrC,ICYH,IAAAE,EAAiB,CACjBC,gBAzBwB,CAACC,EAAWV,KAClC,IACE,OAAiB,IAAbA,EACKW,QAAQC,OAAOC,IAAIC,OAAOL,gBAAgBC,GAE1CC,QAAQE,IAAIC,OAAOL,gBAAgBC,EAE7C,CAAC,MAAOJ,GACPH,QAAQI,MAAM,6BAA6BD,IAC5C,GAiBHS,iBAdyB,CAACL,EAAWV,KACnC,IACE,OAAiB,IAAbA,EACKW,QAAQC,OAAOC,IAAIE,iBAAiBL,GAEpCC,QAAQE,IAAIE,iBAAiBL,EAEvC,CAAC,MAAOJ,GACPH,QAAQI,MAAM,8BAA8BD,IAC7C,ICTH,IAAAU,EAZwB,CAACC,EAASjB,KAChC,IACE,OAAiB,IAAbA,EACKW,QAAQC,OAAOC,IAAIC,OAAOI,gBAAgBD,GAE1CN,QAAQE,IAAIC,OAAOI,gBAAgBD,EAE7C,CAAC,MAAOX,GACPH,QAAQI,MAAM,6BAA6BD,IAC5C,GCyBH,IAAAa,EAlCsB,CAACC,EAAQC,EAAY,IAAIC,QAC7C,IACE,MAAMC,EAAOF,EAAUG,cAAcC,WAC/BC,GAASL,EAAUM,WAAa,GAAGF,WAAWG,SAAS,EAAG,KAC1DC,EAAOR,EAAUS,UAAUL,WAAWG,SAAS,EAAG,KAExD,IAAIG,EACJ,OAAQX,GACR,IAAK,WAeL,QACEW,EAAa,GAAGR,IAAOG,IAAQG,IAC/B,MAdF,IAAK,SACHE,EAAa,GAAGR,EAAKlB,MAAM,EAAG,KAAKqB,IAAQG,IAC3C,MACF,IAAK,aACHE,EAAa,GAAGR,KAAQG,KAASG,IACjC,MACF,IAAK,SACHE,EAAa,GAAGR,IAAOG,IACvB,MACF,IAAK,OACHK,EAAa,GAAGR,EAAKlB,MAAM,EAAG,KAAKqB,IAOrC,OAAOK,CACR,CAAC,MAAOxB,GACPJ,QAAQI,MAAM,2BAA2BD,MAC1C,GCnBH,IAAA0B,EAZkB,CAACtB,EAAWV,KAC5B,IACE,OAAiB,IAAbA,EACKW,QAAQC,OAAOC,IAAIC,OAAOmB,cAAcvB,GAAW,GAEnDC,QAAQE,IAAIC,OAAOmB,cAAcvB,GAAW,EAEtD,CAAC,MAAOJ,GACPH,QAAQI,MAAM,uBAAuBD,IACtC,GCeH,IAAA4B,EAAiB,CAAEC,UAxBAnC,IACjB,IACE,OAAiB,IAAbA,EACKW,QAAQC,OAAOC,IAAIC,OAAOsB,MAAMtB,OAEhCH,QAAQE,IAAIC,OAAOsB,MAAMtB,MAEnC,CAAC,MAAOR,GACPH,QAAQI,MAAM,uBAAuBD,IACtC,aAGe,CAACQ,EAAQd,KACzB,IACE,OAAiB,IAAbA,EACKW,QAAQC,OAAOC,IAAIC,OAAOuB,IAAI,CAAEvB,WAEhCH,QAAQE,IAAIC,OAAOuB,IAAI,CAAEvB,UAEnC,CAAC,MAAOR,GACPH,QAAQI,MAAM,uBAAuBD,IACtC,ICrBH,MAAMN,SAAEA,GAAasC,GACf7B,gBAAEA,EAAeM,iBAAEA,GAAqBwB,GAIxCJ,UAAEA,EAASK,UAAEA,GAAcC,EAWjC,IAAAC,EATiB,CACf1C,WACAS,kBAAiBM,mBACnBG,gBAAEA,EACFyB,cAAEA,EACFC,UAAEA,EACAT,YAAWK"}