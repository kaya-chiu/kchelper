{"version":3,"file":"kchelper.min.js","sources":["../src/utils.js","../src/getFieldElement.js","../src/getSpaceElement.js","../src/getDateString.js","../src/main.js"],"sourcesContent":["const isMobile = event => {\n  const { type } = event\n  const isMobile = type.slice(0, 6) === 'mobile'\n  return isMobile\n}\n\nmodule.exports = {\n  isMobile\n}","const { isMobile } = require('./utils')\n\nconst getFieldElement = (event, fieldCode) => {\n  if (isMobile(event)) {\n    return kintone.mobile.app.record.getFieldElement(fieldCode)\n  } else {\n    return kintone.app.record.getFieldElement(fieldCode)\n  }\n}\n\nconst getFieldElements = (event, fieldCode) => {\n  if (isMobile(event)) {\n    return kintone.mobile.app.getFieldElements(fieldCode)\n  } else {\n    return kintone.app.getFieldElements(fieldCode)\n  }\n}\n\nmodule.exports = {\n  getFieldElement,\n  getFieldElements\n}","const { isMobile } = require('./utils')\n\nconst getSpaceElement = (event, id) => {\n  if (isMobile(event)) {\n    return kintone.mobile.app.record.getSpaceElement(id)\n  } else {\n    return kintone.app.record.getSpaceElement(id)\n  }\n}\n\nmodule.exports = getSpaceElement","const getDateString = (format, inputDate = new Date()) => {\n  const year = inputDate.getFullYear().toString()\n  const month = (inputDate.getMonth() + 1).toString().padStart(2, '0')\n  const date = inputDate.getDate().toString().padStart(2, '0')\n  \n  let dateString\n  switch (format) {\n  case 'yyyymmdd':\n    dateString = `${year}${month}${date}`\n    break\n  case 'yymmdd':\n    dateString = `${year.slice(2, 4)}${month}${date}`\n    break\n  case 'yyyy-mm-dd':\n    dateString = `${year}-${month}-${date}`\n    break\n  case 'yyyymm':\n    dateString = `${year}${month}`\n    break\n  case 'yymm':\n    dateString = `${year.slice(2, 4)}${month}`\n    break\n  default:\n    dateString = `${year}${month}${date}`\n    break\n  }\n\n  return dateString\n}\n\nmodule.exports = getDateString","const { isMobile } = require('./utils')\nconst { getFieldElement, getFieldElements } = require('./getFieldElement')\nconst getSpaceElement = require('./getSpaceElement')\nconst getDateString = require('./getDateString')\n\nconst kchelper = {\n  isMobile,\n  getFieldElement, getFieldElements,\n  getSpaceElement,\n  getDateString,\n}\n\nmodule.exports = kchelper"],"names":["utils","isMobile","event","type","slice","require$$0","getFieldElement_1","getFieldElement","fieldCode","kintone","mobile","app","record","getFieldElements","getSpaceElement_1","id","getSpaceElement","getDateString_1","format","inputDate","Date","year","getFullYear","toString","month","getMonth","padStart","date","getDate","dateString","require$$1","main","getDateString"],"mappings":"aAMA,IAAAA,EAAiB,CACjBC,SAPiBC,IACf,MAAMC,KAAEA,GAASD,EAEjB,MADsC,WAArBC,EAAKC,MAAM,EAAG,EACxBH,GCHT,MAAQA,SAAAA,GAAaI,EAkBrB,IAAAC,EAAiB,CACjBC,gBAjBwB,CAACL,EAAOM,IAC1BP,EAASC,GACJO,QAAQC,OAAOC,IAAIC,OAAOL,gBAAgBC,GAE1CC,QAAQE,IAAIC,OAAOL,gBAAgBC,GAc9CK,iBAVyB,CAACX,EAAOM,IAC3BP,EAASC,GACJO,QAAQC,OAAOC,IAAIE,iBAAiBL,GAEpCC,QAAQE,IAAIE,iBAAiBL,ICdxC,MAAQP,SAAAA,GAAaI,EAUrB,IAAAS,EARwB,CAACZ,EAAOa,IAC1Bd,EAASC,GACJO,QAAQC,OAAOC,IAAIC,OAAOI,gBAAgBD,GAE1CN,QAAQE,IAAIC,OAAOI,gBAAgBD,GCwB9C,IAAAE,EA9BsB,CAACC,EAAQC,EAAY,IAAIC,QAC7C,MAAMC,EAAOF,EAAUG,cAAcC,WAC/BC,GAASL,EAAUM,WAAa,GAAGF,WAAWG,SAAS,EAAG,KAC1DC,EAAOR,EAAUS,UAAUL,WAAWG,SAAS,EAAG,KAExD,IAAIG,EACJ,OAAQX,GACR,IAAK,WAeL,QACEW,EAAa,GAAGR,IAAOG,IAAQG,IAC/B,MAdF,IAAK,SACHE,EAAa,GAAGR,EAAKjB,MAAM,EAAG,KAAKoB,IAAQG,IAC3C,MACF,IAAK,aACHE,EAAa,GAAGR,KAAQG,KAASG,IACjC,MACF,IAAK,SACHE,EAAa,GAAGR,IAAOG,IACvB,MACF,IAAK,OACHK,EAAa,GAAGR,EAAKjB,MAAM,EAAG,KAAKoB,IAOrC,OAAOK,GC3BT,MAAM5B,SAAEA,GAAaI,GACfE,gBAAEA,EAAeM,iBAAEA,GAAqBiB,EAW9C,IAAAC,EAPiB,CACf9B,WACAM,kBAAiBM,mBACnBG,gBAAEA,EACFgB,cAAEA"}